{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMoviess","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58d2283e.chunk.js","sourcesContent":["import axios from 'axios';\n\n// base url to make requests to the movie database\n\nconst instance = axios.create({\n    baseURL:\"https://api.themoviedb.org/3\",\n})\n\n//instance.get('/foo-bar') ---> foobar append into basrURL\n\nexport default instance;","import axios from './axios'\nimport React,{useState,useEffect} from 'react'\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport \"./Row.css\";\n\nconst base_url =  \"https://image.tmdb.org/t/p/original/\";\n\nexport default function Row({title,fetchURL,isLargeRow}) {\n    const [movies,setMovies]= useState([]);\n    const [trailerURL,setTrailerURL] = useState('')\n\n    useEffect(()=>{\n       \n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n             setMovies(request.data.results)\n             return request;\n        }\n        fetchData();\n    },[fetchURL])\n\n    \n   const opts={\n       height:'360',\n       width:'100%',\n       playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1,\n      },\n   }\n\n   const handleClick=(movie)=>{\n       if(trailerURL){\n           setTrailerURL(\"\")\n       }else{\n           movieTrailer(movie?.name || \"\").then(url=>{\n               const urlParams = new URLSearchParams(new URL(url).search);\n               setTrailerURL(urlParams.get('v')) \n\n           }).catch(error=>console.log(error))\n       }\n\n   }\n\n    return (\n        <div className='row' >\n            <h2>{title} </h2>\n          \n            <div className='row__posters' >\n                {/*  severals  ->row- poster(s)*/}\n\n                {\n                    movies.map(movie=>(\n                        \n                        <img className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                        key={movie.id} src={ `${base_url}${isLargeRow? movie.poster_path:movie.backdrop_path}`} \n                         alt={movie.name} \n                         onClick ={()=> handleClick(movie)} />\n                    ))\n                }\n                \n\n            </div>\n            {trailerURL &&  <Youtube videoId={trailerURL} opts={opts} /> }\n           \n        </div>\n    )\n}\n\n\n","const API_KEY= \"129d744e1344fce41963084add6a10a3\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language='en-US`,\n    fetchActionMoviess:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\nexport default requests;","import React ,{useState,useEffect}from 'react'\nimport \"./Banner.css\";\nimport axios from \"./axios\";\nimport requests from \"./request\";\n\nfunction Banner() {\n    const [movie,setMovies] = useState([]);\n\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            \n            setMovies(request.data.results[Math.floor(Math.random() * request.data.results.length-1)])\n            \n            return request;\n        }\n        fetchData()\n\n    },[])\n\n    \n    function truncate(str,n){\n        return str?.length > n ? str.substr(0,n-1) + \"...\" :str;\n    }\n\n    return (\n        <header className='banner' style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`, backgroundPosition:'center center'}} >\n            \n            <div className='banner__contents' >\n              \n                {/* title */}\n                <h1 className='banner__title' > {movie?.title || movie?.name || movie?.original_name} </h1>\n                {/* 2 buttons */}\n                <div className='banner__buttons' >\n                <button className='banner__button' > Play </button>\n                <button className='banner__button' > My List </button>\n\n                </div>\n\n               \n\n\n                \n                {/* Description */}\n                <h1 className='banner__description' >{ truncate(movie?.overview,150) } </h1>\n            </div>\n            <div className='banner__fadeBottom' />\n        </header>\n    )\n}\n\nexport default Banner;\n","import React,{useState, useEffect} from 'react'\nimport \"./Nav.css\";\n\nexport default function Nav() {\n    const[show,handleShow] = useState(false);\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",()=>{\n            if(window.scrollY>100){\n                handleShow(true)\n            }else handleShow(false);\n        })\n        return ()=>{\n            window.removeEventListener('scroll')\n        }\n    },[])\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`} >\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png' \n             className='nav__logo' \n             alt='Netflix Logo'/>\n\n            <img src='https://pbs.twimg.com/media/DlKNEufWsAAgr2E.jpg'\n             className='nav__smileIcon' \n             alt='Netflix Logo'/>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request'\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Navbar */}\n      <Nav/>\n       {/* Banner */}\n       <Banner/>\n      <Row title='NETFLIX ORIGINALS' isLargeRow fetchURL={requests.fetchNetflixOriginals} />\n      <Row title='Trending Now' fetchURL={requests.fetchTrending} />\n      <Row title='Top Rated' fetchURL={requests.fetchTopRated} />\n      <Row title='Action Movies' fetchURL={requests.fetchActionMoviess} />\n      <Row title='Comedy Movies' fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title='Romance Movies' fetchURL={requests.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchURL={requests.fetchDocumentaries} />\n\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}